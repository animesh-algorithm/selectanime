{"version":3,"sources":["redux/api/anime.js","redux/constants/actionTypes.js","components/Anime.js","screens/HomeScreen.js","redux/actions/anime.js","screens/AnimeScreen.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/anime.js","index.js"],"names":["url","FETCH_ANIME_LIST","GET_ANIME","Anime","anime","attributes","Card","className","to","id","Img","src","posterImage","medium","Body","Title","as","titles","en_jp","Text","episodeCount","ageRatingGuide","HomeScreen","dispatch","useDispatch","animeList","useSelector","state","useEffect","a","axios","get","data","type","payload","console","error","Row","map","Col","sm","md","xl","AnimeScreen","match","useState","currAnime","setCurrAnime","find","params","log","Container","Image","fluid","ListGroup","variant","Item","ageRating","episodeLength","status","relationships","streamingLinks","links","self","Button","description","Header","Navbar","bg","expand","collapseOnSelect","Brand","Toggle","Collapse","Nav","Link","Footer","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","animes","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bfe3269.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = 'https://kitsu.io/api/edge/anime'\r\n\r\nexport const fetchAnimeList = () => axios.get(`${url}?page%5Blimit%5D=20`)\r\nexport const getAnime = (id) => axios.get(`${url}/${id}`)","export const FETCH_ANIME_LIST = 'FETCH_ANIME_LIST'\r\nexport const GET_ANIME = 'GET_ANIME'","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Anime = ({ anime, attributes }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/anime/${anime.id}`}>\r\n                <Card.Img src={attributes.posterImage.medium} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Card.Title as='h5'>\r\n                    <strong>{attributes.titles.en_jp}</strong>\r\n                </Card.Title>\r\n                <Card.Text as='p'>\r\n                    <strong>Episode Count: </strong> {attributes.episodeCount} <br />\r\n                    {attributes.ageRatingGuide}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Anime\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchAnimeList } from '../redux/actions/anime'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nimport Anime from '../components/Anime'\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const animeList = useSelector(state => state.anime)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAnimeList())\r\n    }, [dispatch, animeList])\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                {\r\n                    animeList?.data?.map(anime => (\r\n                        <Col key={anime.id} sm={12} md={6} xl={3}>\r\n                            <Anime attributes={anime.attributes} anime={anime} />\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import * as anime from '../api/anime'\r\nimport { FETCH_ANIME_LIST, GET_ANIME } from '../constants/actionTypes'\r\n\r\nexport const fetchAnimeList = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await anime.fetchAnimeList()\r\n        // console.log(data.data)\r\n        const action = {\r\n            type: FETCH_ANIME_LIST,\r\n            payload: data\r\n        }\r\n        dispatch(action)\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport const getAnime = (id) => async (dispatch) => {\r\n    try {\r\n        console.log(id)\r\n        const { data } = await anime.getAnime(id)\r\n        const action = {\r\n            type: GET_ANIME,\r\n            payload: data\r\n        }\r\n        dispatch(action)\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Container, Button } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport HomeScreen from './HomeScreen'\r\n\r\nconst AnimeScreen = ({ match }) => {\r\n    const [currAnime, setCurrAnime] = useState(null)\r\n    const animeList = useSelector(state => state.anime.data)\r\n    const anime = animeList?.find(a => a.id === match.params.id)\r\n\r\n    useEffect(() => {\r\n        setCurrAnime(anime)\r\n        console.log(anime)\r\n    }, [anime, match])\r\n\r\n    return (\r\n        <Container className='container'>\r\n            <Link to='/' className='btn btn-light'>Go Back</Link>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image src={currAnime?.attributes?.posterImage.medium} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{ currAnime?.attributes?.titles.en_jp }</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <p>Rated { currAnime?.attributes?.ageRating }</p>\r\n                            <p>{ currAnime?.attributes?.ageRatingGuide }</p>\r\n                            <p>Episodes: { currAnime?.attributes?.episodeCount }</p>\r\n                            <p>Episode Length: { currAnime?.attributes?.episodeLength } min</p>\r\n                            <p>Status: { currAnime?.attributes?.status === 'finished' ? 'finished' : 'Not Finished' }</p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Link to={currAnime?.relationships.streamingLinks.links.self}>\r\n                                <Button className='btn-block' type='button'>Stream Link</Button>\r\n                            </Link>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={5}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Summary</h2>\r\n                            <p>{ currAnime?.attributes?.description}</p>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <div>\r\n                <h2>Similar Animes</h2>\r\n                <HomeScreen />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AnimeScreen\r\n","import React from 'react'\r\nimport { Navbar, Nav, Container, Row } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>SelectAnime.com</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                                <Nav.Link>About</Nav.Link>\r\n                                <Nav.Link>Login</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>    \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport AnimeScreen from './screens/AnimeScreen'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n            <Route path='/' exact component={HomeScreen} />\n            <Route path='/anime/:id' exact component={AnimeScreen} />      \n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\r\nimport anime from './anime'\r\n\r\nexport default combineReducers({\r\n    anime\r\n})","import { FETCH_ANIME_LIST, GET_ANIME } from '../constants/actionTypes'\r\n\r\nexport default (animes=[], action) => {\r\n    switch (action.type) {\r\n        case FETCH_ANIME_LIST:\r\n            return action.payload\r\n        case GET_ANIME:\r\n            return action.payload\r\n        default:\r\n            return animes\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './redux/reducers'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}